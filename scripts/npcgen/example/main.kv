WeatherRoot:

<WeatherRoot>:
    AddLocationForm:

<SelectableLabel>:
    # Draw a background to indicate selection
    canvas.before:
        Color:
            rgba: (1, 0, 0, 1) if self.selected else (.0, 0.9, .1, .3)
        Rectangle:
            pos: self.pos
            size: self.size

<AddLocationForm>:
    orientation: "vertical"

    search_input: search_input
    search_results: search_results_list

    BoxLayout:
        height: "40dp"
        size_hint_y:None

        TextInput:
            id: search_input
            size_hint_x: 50
            focus: True
            multiline: False
            hint_text: 'Your city name'
            on_text_validate: root.search_location()


        Button:
            text: "Search"
            size_hint_x: 25
            on_press: root.search_location()

        Button:
            text: "Current Location"
            size_hint_x: 25
			on_press: root.current_location()

    RecycleView:
        id: search_results_list

        viewclass: 'SelectableLabel'

        SelectableRecycleBoxLayout:
            default_size: None, dp(26)
            default_size_hint: 1, None
            size_hint_y: None
            height: self.minimum_height
            orientation: 'vertical'
            multiselect: False
            touch_multiselect: False
	Button:
        height: "40dp"
        size_hint_y: None
        text: "Cancel"
        on_press: app.root.show_current_weather(None)

<CurrentWeather>:
    orientation: "vertical"
	degree: 'Â°'[1:]
	value: '{}C'.format(root.degree) if(root.temp_type)== 'metric' else '{}F'.format(root.degree)
    BoxLayout:
        Label:
            text: "{} ({})".format(root.location[0], root.location[1])
            font_size: "30dp"
        Label:
            text: "{}{}".format(root.temp,root.value)
            font_size: "30dp"
	BoxLayout:
        orientation: "horizontal"
        Label:
            text: root.conditions
        AsyncImage:
            source: root.conditions_image
    BoxLayout:
        orientation: "horizontal"
        Label:
            text: "Low: {}{}".format(root.temp_min, root.value)
        Label:
            text: "High: {}{}".format(root.temp_max, root.value)
    Button:
		size_hint_y: None
		height: "40dp"
		text: 'Settings'
		on_press: app.open_settings()

	BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Add Location"
            on_press: app.root.show_add_location_form()
        Button:
            text: "Forecast"
			on_press: app.root.show_forecast(root.location)

<ForecastLabel@BoxLayout>:
    date: ""
    conditions_image: ""
    conditions: ""
    temp_min: None
    temp_max: None
    canvas.before:
        Color:
            rgb: [0.2, 0.2, 0.2]
        Line:
            points: [self.pos[0], self.pos[1], self.width, self.pos[1]]
    Label:
        text: root.date
    BoxLayout:
        orientation: "vertical"
        AsyncImage:
            source: root.conditions_image
        Label:
            text: root.conditions
    BoxLayout:
        orientation: "vertical"
        Label:
            text: "Low: {}".format(root.temp_min)
        Label:
            text: "High: {}".format(root.temp_max)

<Forecast>:
    forecast_container: forecast_container
    orientation: "vertical"
    Label:
        size_hint_y: 0.1
        font_size: "30dp"
        text: "{} ({})".format(root.location[0], root.location[1])
    BoxLayout:
        orientation: "vertical"
        id: forecast_container
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Current"
            on_press: app.root.show_current_weather(root.location)